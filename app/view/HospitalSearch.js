/*
 * File: app/view/Main.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

var locationComplete;

Ext.define('FindAHospital.view.HospitalSearch', {
    extend: 'Ext.form.Panel',
    alias: 'widget.search',
    xtype: 'search',
    requires: ['Ext.TitleBar'],
    config: {
        scrollable: true, 
        items:[
            {
                xtype: 'titlebar',
                title: 'FindAHospital',
                docked: 'top',
                items: [
                    {
                        xtype: 'button',
                        text: 'Log Off',
                        id: 'logOffButton',
                        align: 'right'
                    }

                ]
            },
            {
                xtype: 'fieldset',
                title: 'Hospital Details',
                id: 'hospitalSearchForm',
                name: 'hospitalSearch',
                items: [
                    {
                        html: '<div class="x-container x-field-text x-field x-label-align-top x-field-labeled x-form-label-nowrap x-empty" id=""><div class="x-form-label" id="" style="width: 100% border: 10px !important;"><span id="ext-element-251">Address</div><div class="x-component-outer" id=""><div class="x-unsized x-field-input" id=""><input class="x-input-el x-form-field x-input-text" type="text" id="locationField" name="locationPoint" maxlength="50" placeholder="" required><div class="x-field-mask" style="display: none !important;" id=""></div><div class="x-clear-icon" id=""></span></div></div></div></div>'
                    }
                ],
            },
        
            {
                xtype: 'button',
                id: 'hospitalSearchButton',
                text: 'search',
                ui: 'action'
            },
            {
                xtype: 'map',
                id: 'hiddenMap',
                style: 'display:none;'
            },

        ],
      listeners: [
            {
                fn: 'init',
                event: 'painted'
            }
        ]
    },

    init: function() {
        var me = this;
        var locationInput = document.getElementById('locationField');
        var map;
        //Create new autocomplete object
        locationComplete = new google.maps.places.Autocomplete(locationInput);
     
        //Bias to users current location
        this.geolocate();
        var place;

        google.maps.event.addListener(locationComplete, 'place_changed', function() {
            place = locationComplete.getPlace();
            console.log(place.formatted_address); //address
            console.log(place.geometry.location.lat()); //latitude
            console.log(place.geometry.location.lng()); //longitude
     

            var mapPanel = Ext.ComponentQuery.query("#hiddenMap")[0];
            var map = mapPanel.getMap();

            var lat = place.geometry.location.lat();
            var lng = place.geometry.location.lng();

            var coordinate_location = new google.maps.LatLng(lat, lng);

            var request = {
                location: coordinate_location,
                types: ['hospital'],
                radius: 2000
            };

            var locationStore = Ext.getStore('Locations');
            locationStore.removeAll();
            locationStore.sync();
            var hospitalData;
            
            var service = new google.maps.places.PlacesService(map);
            service.nearbySearch(request, callback);

            function callback(results, status) {
                      if (status == google.maps.places.PlacesServiceStatus.OK) {
                        Ext.Viewport.setMasked({xtype:'loadmask',message:'Loading hospitals'});
                        for (var i = 0; i < results.length; i++) {
                          console.log('location ' + results[i].geometry.location + ' ' + results[i].name + ' ' + 'rating '+results[i].rating + ' reviews ' + results[i].formatted_phone_number);
                            var lat, lng, name, rating;
                            if (lat === undefined && lng === undefined && name === undefined){

                                hospitalData = Ext.create('FindAHospital.model.Location', {
                                            rating: results[i].rating,
                                            lat: results[i].geometry.location.lat(),
                                            lng: results[i].geometry.location.lng(),
                                            name: results[i].name
                                            });
                                hospitalData.save();
                                locationStore.add(hospitalData);  
                             }
                             else {
                                 var errorMsg = "Please search for something";
                                 Ext.Msg.alert("Doh!", errorMsg);
                             }

                        }
                        Ext.Viewport.setMasked(false);   
                  }

              }

        });


     },

    geolocate: function() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var geolocation = new google.maps.LatLng(
              position.coords.latitude, position.coords.longitude);
     
          locationComplete.setBounds(new google.maps.LatLngBounds(geolocation,
              geolocation));
        });
      }
    }

});