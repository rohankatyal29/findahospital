/*
 * File: app/view/Main.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */
var locationComplete;

Ext.define('FindAHospital.view.Map', {
    extend: 'Ext.form.Panel',
    alias: 'widget.hospitalMap',
    requires: ['Ext.TitleBar','Ext.Map'],
    config: {
        items:[
            {
                xtype: 'titlebar',
                docked: 'top',
                title: 'FindAHospital'
            },
            {
               html: '<div class="x-container x-field-text x-field x-label-align-top x-field-labeled x-form-label-nowrap x-empty" id=""><div class="x-form-label" id="" style="width: 100% !important;"><span id="ext-element-251">Address</span></div><div class="x-component-outer" id=""><div class="x-unsized x-field-input" id=""><input class="x-input-el x-form-field x-input-text" type="text" id="locationField" name="locationPoint" maxlength="50" placeholder=""><div class="x-field-mask" style="display: none !important;" id=""></div><div class="x-clear-icon" id=""></div></div></div></div>'
            },
            {
                xtype: 'map',
                mapOptions: {
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    zoom: 15
                },
                id: 'hospitalMap',
                flex: 1,
                //change this is something responsive
                height: 300
            },
            {
                xtype: 'tabpanel',
                layout: {
                    animation: 'slide',
                    type: 'card'
                },
                items: [ 
                    {
                        xtype: 'container',
                        title: 'Tab 1',
                        iconCls: 'info'
                    }
                ],
            },
        ],
        listeners: [
            {
                fn: 'init',
                event: 'painted'
            }
        ]
    },

    init: function() {
        var me = this;
        var locationInput = document.getElementById('locationField');
        var map;
        //Create new autocomplete object
        locationComplete = new google.maps.places.Autocomplete(locationInput);
     
        //Bias to users current location
        this.geolocate();
        var place;

        google.maps.event.addListener(locationComplete, 'place_changed', function() {
            place = locationComplete.getPlace();
            console.log(place.formatted_address); //address
            console.log(place.geometry.location.lat()); //latitude
            console.log(place.geometry.location.lng()); //longitude
     
            var mapPanel = Ext.ComponentQuery.query("#hospitalMap")[0];
            var map = mapPanel.getMap();

            var lat = place.geometry.location.lat();
            var lng = place.geometry.location.lng();

            var coordinate_location = new google.maps.LatLng(lat, lng);

            var request = {
                location: coordinate_location,
                radius: 500,
                types: ['hospital']
            };

            var infowindow = new google.maps.InfoWindow();
            var service = new google.maps.places.PlacesService(map);
            service.nearbySearch(request, callback);

            function callback(results, status) {
                      if (status == google.maps.places.PlacesServiceStatus.OK) {
                        console.log(results.length);
                        for (var i = 0; i < results.length; i++) {
                          createMarker(results[i].geometry.location, map, results[i].name, infowindow);
                      }
                  }
              }


            if (map == null) {
                Ext.Function.defer(this.init,250,this,[component,lat,lng]);
            } 
            else {
            //set the map center
            mapPanel.setMapCenter({
                latitude: lat, 
                longitude: lng
            });


        }

        });

    function createMarker(location,map,name,infowindow) {
        var placeLoc = location;
        var marker = new google.maps.Marker({
        map: map,
        position: location
    });

    google.maps.event.addListener(marker, 'dblclick', function() {
        map.setZoom(17);
        map.marker.getPosition();
    });

    google.maps.event.addListener(marker, 'mouseover', function() {
        infowindow.setContent(name);
        infowindow.open(map, this);
    });
    }
    
    },

    geolocate: function() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var geolocation = new google.maps.LatLng(
              position.coords.latitude, position.coords.longitude);
     
          locationComplete.setBounds(new google.maps.LatLngBounds(geolocation,
              geolocation));
        });
      }
    }

});